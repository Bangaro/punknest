/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.FRMGameController;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.CharacterPicker;
import model.GameThread;
import model.Sound;

/**
 *
 * @author monge
 */
public class FRMGame extends javax.swing.JFrame {

    public static int gameSpeed = 2;

    PanelMenuPrincipal panelMenu;
    PanelGame panelGame;
    PanelOptions panelOptions;
    PanelTopScorers panelTopScorers;
    PanelPickPlayer panelPickPlayer;

    FRMGameController frmGameController;

    public static String posicionPersonaje = "";
    public static String estadoPersonaje = "SLOW";

    GameThread thread;

    CharacterPicker characterPicker = new CharacterPicker("CHARACTER.DATA");

    URL charactersURL[] = new URL[30];
    String character;

    Icon stop;
    Icon slow;
    Icon medium;
    Icon fast;
    Icon hurt;
    Icon attack;
    Icon dead;
    
    public static Icon life2;
    public static Icon life1;
    public static Icon life0;
  

    /**
     * Creates new form FRMGame
     */
    public FRMGame() {
        initComponents();
        this.setVisible(true);
        this.setSize(800, 486);

        panelMenu = new PanelMenuPrincipal();
        panelGame = new PanelGame();
        panelOptions = new PanelOptions();
        panelTopScorers = new PanelTopScorers();
        panelPickPlayer = new PanelPickPlayer();
        this.add(panelOptions);
        this.add(panelTopScorers);
        this.add(panelMenu);
        this.add(panelGame);
        this.add(panelPickPlayer);

        panelGame.getCharacter().setIcon(stop);

        panelGame.setVisible(false);
        panelOptions.setVisible(false);
        panelTopScorers.setVisible(false);
        panelPickPlayer.setVisible(false);
        panelMenu.setVisible(true);

        frmGameController = new FRMGameController(this);
        escucharPaneles();

        thread = new GameThread(this);
        thread.start();

    }

    public void escucharPaneles() {
        this.panelMenu.escuchar(frmGameController);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));
        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:

        if (posicionPersonaje.equals("ABAJO")) {
            posicionPersonaje = "ARRIBA";
            estadoPersonaje = "MEDIUM";
        } else {
            posicionPersonaje = "ABAJO";
            estadoPersonaje = "MEDIUM";

        }

    }//GEN-LAST:event_formMousePressed

    private void boosterDestroyActive() {
        if (!GameThread.isHurt) {
            if (panelGame.getCharacterInGame().isBoosterActive()) {
                estadoPersonaje = "ATTACK";
            } else {
                estadoPersonaje = "MEDIUM";
            }
        }

    }

    private void characterIsHurt() {
        if (GameThread.isHurt) {
            estadoPersonaje = "HURT";
        }
    }

    public void getCharacterPicked() {
        character = characterPicker.getCharacter();
    }

    public void loadCharacter() {
        try {
            stop = new ImageIcon(getClass().getResource("/assets/personajes/" + character + "/stop.gif"));
            slow = new ImageIcon(getClass().getResource("/assets/personajes/" + character + "/slow.gif"));
            medium = new ImageIcon(getClass().getResource("/assets/personajes/" + character + "/medium.gif"));
            hurt = new ImageIcon(getClass().getResource("/assets/personajes/" + character + "/hurt.gif"));
            attack = new ImageIcon(getClass().getResource("/assets/personajes/" + character + "/attack.gif"));
            dead = new ImageIcon(getClass().getResource("/assets/personajes/" + character + "/dead.gif"));

            panelGame.getCharacter().setIcon(slow);
        } catch (Exception e) {

        }
    }
    
     public void loadLifeGifs() {
        try {
            life0 = new ImageIcon(getClass().getResource("/assets/misc/life/life0.png"));
            life1 = new ImageIcon(getClass().getResource("/assets/misc/life/life1.png"));
            life2 = new ImageIcon(getClass().getResource("/assets/misc/life/life2.png"));            

  
        } catch (Exception e) {

        }
    }
    
    
   
    public void moveCharacter() {
        estadoPersonaje();

        if (posicionPersonaje.equals("ARRIBA")) {
            if (panelGame.getCharacter().getBounds().y >= 335) {
                panelGame.getCharacter().setLocation(panelGame.getCharacter().getBounds().x, panelGame.getCharacter().getBounds().y - (gameSpeed - 1));
            }

        }
        if (posicionPersonaje.equals("ABAJO")) {
            if (panelGame.getCharacter().getBounds().y <= 396) {
                panelGame.getCharacter().setLocation(panelGame.getCharacter().getBounds().x, panelGame.getCharacter().getBounds().y + (gameSpeed - 1));
            }

        }

        characterIsHurt();
        boosterDestroyActive();

    }

    public void estadoPersonaje() {
        if (estadoPersonaje.equals("STOP")) {
            panelGame.getCharacter().setIcon(stop);
        }
        if (estadoPersonaje.equals("SLOW")) {
            panelGame.getCharacter().setIcon(slow);
        }
        if (estadoPersonaje.equals("MEDIUM")) {
            panelGame.getCharacter().setIcon(medium);
        }
        if (estadoPersonaje.equals("FAST")) {
            panelGame.getCharacter().setIcon(fast);
        }
        if (estadoPersonaje.equals("HURT")) {
            panelGame.getCharacter().setIcon(hurt);
        }
        if (estadoPersonaje.equals("ATTACK")) {
            panelGame.getCharacter().setIcon(attack);
        }
        if (estadoPersonaje.equals("DEAD")) {
            panelGame.getCharacter().setIcon(dead);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        new FRMGame();

    }

    public PanelMenuPrincipal getPanelMenu() {
        return panelMenu;
    }

    public PanelGame getPanelGame() {
        return panelGame;
    }

    public PanelOptions getPanelOptions() {
        return panelOptions;
    }

    public PanelTopScorers getPanelTopScorers() {
        return panelTopScorers;
    }

    public PanelPickPlayer getPanelPickPlayer() {
        return panelPickPlayer;
    }

    public Icon getLife2() {
        return life2;
    }

    public Icon getLife1() {
        return life1;
    }

    public Icon getLife0() {
        return life0;
    }

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
